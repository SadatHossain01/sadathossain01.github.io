import{p as r,i as O,a as g,m as A,o as E,t as m,c as D}from"./tdPjAwZY.js";import{i as F,f as H,s as a}from"./BZApZ-7O.js";import{p as J,G as K,g as s,c as y,s as I,r as z,t as f,e as u,a as Q,m as x}from"./BWRrumWu.js";import{t as _,s as T}from"./CU72pHL2.js";function U(o,t,c,w){var h=o.__styles??(o.__styles={});h[t]!==c&&(h[t]=c,c==null?o.style.removeProperty(t):o.style.setProperty(t,c,""))}var V=m('<img class="optimized-image svelte-18zhvdp">'),W=m('<div class="error-placeholder svelte-18zhvdp"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="svelte-18zhvdp"><rect x="3" y="3" width="18" height="18" rx="2" ry="2" class="svelte-18zhvdp"></rect><circle cx="8.5" cy="8.5" r="1.5" class="svelte-18zhvdp"></circle><polyline points="21,15 16,10 5,21" class="svelte-18zhvdp"></polyline><line x1="21" y1="2" x2="3" y2="20" class="svelte-18zhvdp"></line></svg> <span class="sr-only svelte-18zhvdp"> </span></div>'),X=m('<div class="image-skeleton svelte-18zhvdp"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="skeleton-icon svelte-18zhvdp"><rect x="3" y="3" width="18" height="18" rx="2" ry="2" class="svelte-18zhvdp"></rect><circle cx="8.5" cy="8.5" r="1.5" class="svelte-18zhvdp"></circle><polyline points="21,15 16,10 5,21" class="svelte-18zhvdp"></polyline></svg></div>'),Y=m("<div><!> <!></div>");function se(o,t){J(t,!1);let c=r(t,"src",8),w=r(t,"alt",8),h=r(t,"className",8,""),b=r(t,"loading",8,"lazy"),j=r(t,"decoding",8,"async"),B=r(t,"fetchpriority",8,"auto"),C=r(t,"sizes",8,"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"),M=r(t,"width",8,void 0),N=r(t,"height",8,void 0),P=r(t,"aspectRatio",8,void 0),l=x(),p=x(!1),v=x(!1);const R=i=>i,G=()=>{u(p,!0)},L=()=>{u(v,!0)};K(()=>{if(b()==="lazy"&&"IntersectionObserver"in window){const i=new IntersectionObserver(e=>{e.forEach(d=>{d.isIntersecting&&s(l)&&i.unobserve(s(l))})},{rootMargin:"50px"});return s(l)&&i.observe(s(l)),()=>{s(l)&&i.unobserve(s(l))}}}),F();var n=Y(),k=y(n);O(k,()=>!s(v),i=>{var e=V();f(()=>a(e,"src",R(c()))),A(e,d=>u(l,d),()=>s(l)),f(()=>{a(e,"alt",w()),a(e,"loading",b()),a(e,"decoding",j()),a(e,"fetchpriority",B()),a(e,"sizes",C()),a(e,"width",M()),a(e,"height",N()),_(e,"loaded",s(p))}),H(e),E("load",e,G),E("error",e,L),g(i,e)},i=>{var e=W(),d=I(y(e),2),q=y(d,!0);z(d),z(e),f(()=>D(q,w())),g(i,e)});var S=I(k,2);O(S,()=>!s(p)&&!s(v),i=>{var e=X();g(i,e)}),z(n),f(()=>{T(n,`image-container ${h()??""} svelte-18zhvdp`),_(n,"loading",!s(p)&&!s(v)),_(n,"error",s(v)),U(n,"aspect-ratio",P())}),g(o,n),Q()}export{se as O};
